// Code generated by go-swagger; DO NOT EDIT.

package backend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/project-flotta/flotta-operator/backend/models"
)

// GetTargetNamespaceOKCode is the HTTP code returned for type GetTargetNamespaceOK
const GetTargetNamespaceOKCode int = 200

/*GetTargetNamespaceOK OK

swagger:response getTargetNamespaceOK
*/
type GetTargetNamespaceOK struct {

	/*
	  In: Body
	*/
	Payload *models.DeviceRegistrationTargetNamespaceResponse `json:"body,omitempty"`
}

// NewGetTargetNamespaceOK creates GetTargetNamespaceOK with default headers values
func NewGetTargetNamespaceOK() *GetTargetNamespaceOK {

	return &GetTargetNamespaceOK{}
}

// WithPayload adds the payload to the get target namespace o k response
func (o *GetTargetNamespaceOK) WithPayload(payload *models.DeviceRegistrationTargetNamespaceResponse) *GetTargetNamespaceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get target namespace o k response
func (o *GetTargetNamespaceOK) SetPayload(payload *models.DeviceRegistrationTargetNamespaceResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTargetNamespaceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTargetNamespaceUnauthorizedCode is the HTTP code returned for type GetTargetNamespaceUnauthorized
const GetTargetNamespaceUnauthorizedCode int = 401

/*GetTargetNamespaceUnauthorized Unauthorized

swagger:response getTargetNamespaceUnauthorized
*/
type GetTargetNamespaceUnauthorized struct {
}

// NewGetTargetNamespaceUnauthorized creates GetTargetNamespaceUnauthorized with default headers values
func NewGetTargetNamespaceUnauthorized() *GetTargetNamespaceUnauthorized {

	return &GetTargetNamespaceUnauthorized{}
}

// WriteResponse to the client
func (o *GetTargetNamespaceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetTargetNamespaceForbiddenCode is the HTTP code returned for type GetTargetNamespaceForbidden
const GetTargetNamespaceForbiddenCode int = 403

/*GetTargetNamespaceForbidden Forbidden

swagger:response getTargetNamespaceForbidden
*/
type GetTargetNamespaceForbidden struct {
}

// NewGetTargetNamespaceForbidden creates GetTargetNamespaceForbidden with default headers values
func NewGetTargetNamespaceForbidden() *GetTargetNamespaceForbidden {

	return &GetTargetNamespaceForbidden{}
}

// WriteResponse to the client
func (o *GetTargetNamespaceForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

/*GetTargetNamespaceDefault Error

swagger:response getTargetNamespaceDefault
*/
type GetTargetNamespaceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.DeviceRegistrationTargetNamespaceResponse `json:"body,omitempty"`
}

// NewGetTargetNamespaceDefault creates GetTargetNamespaceDefault with default headers values
func NewGetTargetNamespaceDefault(code int) *GetTargetNamespaceDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTargetNamespaceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get target namespace default response
func (o *GetTargetNamespaceDefault) WithStatusCode(code int) *GetTargetNamespaceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get target namespace default response
func (o *GetTargetNamespaceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get target namespace default response
func (o *GetTargetNamespaceDefault) WithPayload(payload *models.DeviceRegistrationTargetNamespaceResponse) *GetTargetNamespaceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get target namespace default response
func (o *GetTargetNamespaceDefault) SetPayload(payload *models.DeviceRegistrationTargetNamespaceResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTargetNamespaceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
