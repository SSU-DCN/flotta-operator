// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateHeartBeatReader is a Reader for the UpdateHeartBeat structure.
type UpdateHeartBeatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateHeartBeatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateHeartBeatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateHeartBeatUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateHeartBeatForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateHeartBeatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateHeartBeatOK creates a UpdateHeartBeatOK with default headers values
func NewUpdateHeartBeatOK() *UpdateHeartBeatOK {
	return &UpdateHeartBeatOK{}
}

/* UpdateHeartBeatOK describes a response with status code 200, with default header values.

Success
*/
type UpdateHeartBeatOK struct {
}

func (o *UpdateHeartBeatOK) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/devices/{device-id}/heartbeat][%d] updateHeartBeatOK ", 200)
}

func (o *UpdateHeartBeatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateHeartBeatUnauthorized creates a UpdateHeartBeatUnauthorized with default headers values
func NewUpdateHeartBeatUnauthorized() *UpdateHeartBeatUnauthorized {
	return &UpdateHeartBeatUnauthorized{}
}

/* UpdateHeartBeatUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateHeartBeatUnauthorized struct {
}

func (o *UpdateHeartBeatUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/devices/{device-id}/heartbeat][%d] updateHeartBeatUnauthorized ", 401)
}

func (o *UpdateHeartBeatUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateHeartBeatForbidden creates a UpdateHeartBeatForbidden with default headers values
func NewUpdateHeartBeatForbidden() *UpdateHeartBeatForbidden {
	return &UpdateHeartBeatForbidden{}
}

/* UpdateHeartBeatForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateHeartBeatForbidden struct {
}

func (o *UpdateHeartBeatForbidden) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/devices/{device-id}/heartbeat][%d] updateHeartBeatForbidden ", 403)
}

func (o *UpdateHeartBeatForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateHeartBeatInternalServerError creates a UpdateHeartBeatInternalServerError with default headers values
func NewUpdateHeartBeatInternalServerError() *UpdateHeartBeatInternalServerError {
	return &UpdateHeartBeatInternalServerError{}
}

/* UpdateHeartBeatInternalServerError describes a response with status code 500, with default header values.

Error
*/
type UpdateHeartBeatInternalServerError struct {
}

func (o *UpdateHeartBeatInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/devices/{device-id}/heartbeat][%d] updateHeartBeatInternalServerError ", 500)
}

func (o *UpdateHeartBeatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
