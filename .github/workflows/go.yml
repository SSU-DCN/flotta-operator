name: Go
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.coverage.outputs.coverage }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Test
      run: make test

    - name: Coverage
      id: coverage
      run: |
        make test-create-coverage
        COVERAGE=$(go tool cover --func=cover.out |  grep total | grep -Eo '[0-9]+\.[0-9]+')
        echo "::set-output name=coverage::${COVERAGE}"

    - uses: actions/upload-artifact@v2
      with:
        name: test-coverage
        path: coverage.html

    - name: Checking generated files are up to date
      run: |
        git diff --quiet config/ internal/ client/ restapi/ || (echo "There are not committed changes"; git diff config/ internal/ client/ restapi/ | tee; exit 1)

  Coverage:
    needs: build
    name: "Test Coverage ${{ needs.build.outputs.coverage }}"
    runs-on: ubuntu-latest
    steps:
      - run: |
          "echo 'Coverage status: ${{ needs.build.outputs.coverage }}'; exit ${{ needs.build.outputs.coverage > 45 && '0' || '1' }}"
  Lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2.5.1

  Security-Scanner:
    name: Security Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-exclude-generated  ./...'
