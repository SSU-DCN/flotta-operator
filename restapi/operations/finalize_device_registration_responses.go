// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/project-flotta/flotta-operator/models"
)

// FinalizeDeviceRegistrationOKCode is the HTTP code returned for type FinalizeDeviceRegistrationOK
const FinalizeDeviceRegistrationOKCode int = 200

/*FinalizeDeviceRegistrationOK Success

swagger:response finalizeDeviceRegistrationOK
*/
type FinalizeDeviceRegistrationOK struct {
}

// NewFinalizeDeviceRegistrationOK creates FinalizeDeviceRegistrationOK with default headers values
func NewFinalizeDeviceRegistrationOK() *FinalizeDeviceRegistrationOK {

	return &FinalizeDeviceRegistrationOK{}
}

// WriteResponse to the client
func (o *FinalizeDeviceRegistrationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// FinalizeDeviceRegistrationUnauthorizedCode is the HTTP code returned for type FinalizeDeviceRegistrationUnauthorized
const FinalizeDeviceRegistrationUnauthorizedCode int = 401

/*FinalizeDeviceRegistrationUnauthorized Unauthorized

swagger:response finalizeDeviceRegistrationUnauthorized
*/
type FinalizeDeviceRegistrationUnauthorized struct {
}

// NewFinalizeDeviceRegistrationUnauthorized creates FinalizeDeviceRegistrationUnauthorized with default headers values
func NewFinalizeDeviceRegistrationUnauthorized() *FinalizeDeviceRegistrationUnauthorized {

	return &FinalizeDeviceRegistrationUnauthorized{}
}

// WriteResponse to the client
func (o *FinalizeDeviceRegistrationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// FinalizeDeviceRegistrationForbiddenCode is the HTTP code returned for type FinalizeDeviceRegistrationForbidden
const FinalizeDeviceRegistrationForbiddenCode int = 403

/*FinalizeDeviceRegistrationForbidden Forbidden

swagger:response finalizeDeviceRegistrationForbidden
*/
type FinalizeDeviceRegistrationForbidden struct {
}

// NewFinalizeDeviceRegistrationForbidden creates FinalizeDeviceRegistrationForbidden with default headers values
func NewFinalizeDeviceRegistrationForbidden() *FinalizeDeviceRegistrationForbidden {

	return &FinalizeDeviceRegistrationForbidden{}
}

// WriteResponse to the client
func (o *FinalizeDeviceRegistrationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

/*FinalizeDeviceRegistrationDefault Error

swagger:response finalizeDeviceRegistrationDefault
*/
type FinalizeDeviceRegistrationDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFinalizeDeviceRegistrationDefault creates FinalizeDeviceRegistrationDefault with default headers values
func NewFinalizeDeviceRegistrationDefault(code int) *FinalizeDeviceRegistrationDefault {
	if code <= 0 {
		code = 500
	}

	return &FinalizeDeviceRegistrationDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the finalize device registration default response
func (o *FinalizeDeviceRegistrationDefault) WithStatusCode(code int) *FinalizeDeviceRegistrationDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the finalize device registration default response
func (o *FinalizeDeviceRegistrationDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the finalize device registration default response
func (o *FinalizeDeviceRegistrationDefault) WithPayload(payload *models.Error) *FinalizeDeviceRegistrationDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the finalize device registration default response
func (o *FinalizeDeviceRegistrationDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FinalizeDeviceRegistrationDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
