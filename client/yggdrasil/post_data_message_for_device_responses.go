// Code generated by go-swagger; DO NOT EDIT.

package yggdrasil

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostDataMessageForDeviceReader is a Reader for the PostDataMessageForDevice structure.
type PostDataMessageForDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDataMessageForDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDataMessageForDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostDataMessageForDeviceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDataMessageForDeviceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDataMessageForDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDataMessageForDeviceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDataMessageForDeviceOK creates a PostDataMessageForDeviceOK with default headers values
func NewPostDataMessageForDeviceOK() *PostDataMessageForDeviceOK {
	return &PostDataMessageForDeviceOK{}
}

/*PostDataMessageForDeviceOK handles this case with default header values.

Success
*/
type PostDataMessageForDeviceOK struct {
}

func (o *PostDataMessageForDeviceOK) Error() string {
	return fmt.Sprintf("[POST /data/{device_id}/out][%d] postDataMessageForDeviceOK ", 200)
}

func (o *PostDataMessageForDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDataMessageForDeviceUnauthorized creates a PostDataMessageForDeviceUnauthorized with default headers values
func NewPostDataMessageForDeviceUnauthorized() *PostDataMessageForDeviceUnauthorized {
	return &PostDataMessageForDeviceUnauthorized{}
}

/*PostDataMessageForDeviceUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDataMessageForDeviceUnauthorized struct {
}

func (o *PostDataMessageForDeviceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /data/{device_id}/out][%d] postDataMessageForDeviceUnauthorized ", 401)
}

func (o *PostDataMessageForDeviceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDataMessageForDeviceForbidden creates a PostDataMessageForDeviceForbidden with default headers values
func NewPostDataMessageForDeviceForbidden() *PostDataMessageForDeviceForbidden {
	return &PostDataMessageForDeviceForbidden{}
}

/*PostDataMessageForDeviceForbidden handles this case with default header values.

Forbidden
*/
type PostDataMessageForDeviceForbidden struct {
}

func (o *PostDataMessageForDeviceForbidden) Error() string {
	return fmt.Sprintf("[POST /data/{device_id}/out][%d] postDataMessageForDeviceForbidden ", 403)
}

func (o *PostDataMessageForDeviceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDataMessageForDeviceNotFound creates a PostDataMessageForDeviceNotFound with default headers values
func NewPostDataMessageForDeviceNotFound() *PostDataMessageForDeviceNotFound {
	return &PostDataMessageForDeviceNotFound{}
}

/*PostDataMessageForDeviceNotFound handles this case with default header values.

Error
*/
type PostDataMessageForDeviceNotFound struct {
}

func (o *PostDataMessageForDeviceNotFound) Error() string {
	return fmt.Sprintf("[POST /data/{device_id}/out][%d] postDataMessageForDeviceNotFound ", 404)
}

func (o *PostDataMessageForDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDataMessageForDeviceInternalServerError creates a PostDataMessageForDeviceInternalServerError with default headers values
func NewPostDataMessageForDeviceInternalServerError() *PostDataMessageForDeviceInternalServerError {
	return &PostDataMessageForDeviceInternalServerError{}
}

/*PostDataMessageForDeviceInternalServerError handles this case with default header values.

Error
*/
type PostDataMessageForDeviceInternalServerError struct {
}

func (o *PostDataMessageForDeviceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /data/{device_id}/out][%d] postDataMessageForDeviceInternalServerError ", 500)
}

func (o *PostDataMessageForDeviceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
