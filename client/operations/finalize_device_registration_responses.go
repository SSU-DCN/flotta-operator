// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project-flotta/flotta-operator/models"
)

// FinalizeDeviceRegistrationReader is a Reader for the FinalizeDeviceRegistration structure.
type FinalizeDeviceRegistrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FinalizeDeviceRegistrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFinalizeDeviceRegistrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFinalizeDeviceRegistrationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFinalizeDeviceRegistrationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewFinalizeDeviceRegistrationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFinalizeDeviceRegistrationOK creates a FinalizeDeviceRegistrationOK with default headers values
func NewFinalizeDeviceRegistrationOK() *FinalizeDeviceRegistrationOK {
	return &FinalizeDeviceRegistrationOK{}
}

/*FinalizeDeviceRegistrationOK handles this case with default header values.

Success
*/
type FinalizeDeviceRegistrationOK struct {
}

func (o *FinalizeDeviceRegistrationOK) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/devices/{device-id}/register][%d] finalizeDeviceRegistrationOK ", 200)
}

func (o *FinalizeDeviceRegistrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFinalizeDeviceRegistrationUnauthorized creates a FinalizeDeviceRegistrationUnauthorized with default headers values
func NewFinalizeDeviceRegistrationUnauthorized() *FinalizeDeviceRegistrationUnauthorized {
	return &FinalizeDeviceRegistrationUnauthorized{}
}

/*FinalizeDeviceRegistrationUnauthorized handles this case with default header values.

Unauthorized
*/
type FinalizeDeviceRegistrationUnauthorized struct {
}

func (o *FinalizeDeviceRegistrationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/devices/{device-id}/register][%d] finalizeDeviceRegistrationUnauthorized ", 401)
}

func (o *FinalizeDeviceRegistrationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFinalizeDeviceRegistrationForbidden creates a FinalizeDeviceRegistrationForbidden with default headers values
func NewFinalizeDeviceRegistrationForbidden() *FinalizeDeviceRegistrationForbidden {
	return &FinalizeDeviceRegistrationForbidden{}
}

/*FinalizeDeviceRegistrationForbidden handles this case with default header values.

Forbidden
*/
type FinalizeDeviceRegistrationForbidden struct {
}

func (o *FinalizeDeviceRegistrationForbidden) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/devices/{device-id}/register][%d] finalizeDeviceRegistrationForbidden ", 403)
}

func (o *FinalizeDeviceRegistrationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFinalizeDeviceRegistrationDefault creates a FinalizeDeviceRegistrationDefault with default headers values
func NewFinalizeDeviceRegistrationDefault(code int) *FinalizeDeviceRegistrationDefault {
	return &FinalizeDeviceRegistrationDefault{
		_statusCode: code,
	}
}

/*FinalizeDeviceRegistrationDefault handles this case with default header values.

Error
*/
type FinalizeDeviceRegistrationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the finalize device registration default response
func (o *FinalizeDeviceRegistrationDefault) Code() int {
	return o._statusCode
}

func (o *FinalizeDeviceRegistrationDefault) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/devices/{device-id}/register][%d] FinalizeDeviceRegistration default  %+v", o._statusCode, o.Payload)
}

func (o *FinalizeDeviceRegistrationDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *FinalizeDeviceRegistrationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
