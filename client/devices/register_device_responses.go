// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakub-dzon/k4e-operator/models"
)

// RegisterDeviceReader is a Reader for the RegisterDevice structure.
type RegisterDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRegisterDeviceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRegisterDeviceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRegisterDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegisterDeviceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRegisterDeviceOK creates a RegisterDeviceOK with default headers values
func NewRegisterDeviceOK() *RegisterDeviceOK {
	return &RegisterDeviceOK{}
}

/*RegisterDeviceOK handles this case with default header values.

Success.
*/
type RegisterDeviceOK struct {
	Payload *models.RegistrationConfirmation
}

func (o *RegisterDeviceOK) Error() string {
	return fmt.Sprintf("[POST /device/register][%d] registerDeviceOK  %+v", 200, o.Payload)
}

func (o *RegisterDeviceOK) GetPayload() *models.RegistrationConfirmation {
	return o.Payload
}

func (o *RegisterDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegistrationConfirmation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterDeviceUnauthorized creates a RegisterDeviceUnauthorized with default headers values
func NewRegisterDeviceUnauthorized() *RegisterDeviceUnauthorized {
	return &RegisterDeviceUnauthorized{}
}

/*RegisterDeviceUnauthorized handles this case with default header values.

Unauthorized
*/
type RegisterDeviceUnauthorized struct {
}

func (o *RegisterDeviceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /device/register][%d] registerDeviceUnauthorized ", 401)
}

func (o *RegisterDeviceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterDeviceForbidden creates a RegisterDeviceForbidden with default headers values
func NewRegisterDeviceForbidden() *RegisterDeviceForbidden {
	return &RegisterDeviceForbidden{}
}

/*RegisterDeviceForbidden handles this case with default header values.

Forbidden
*/
type RegisterDeviceForbidden struct {
}

func (o *RegisterDeviceForbidden) Error() string {
	return fmt.Sprintf("[POST /device/register][%d] registerDeviceForbidden ", 403)
}

func (o *RegisterDeviceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterDeviceNotFound creates a RegisterDeviceNotFound with default headers values
func NewRegisterDeviceNotFound() *RegisterDeviceNotFound {
	return &RegisterDeviceNotFound{}
}

/*RegisterDeviceNotFound handles this case with default header values.

Error
*/
type RegisterDeviceNotFound struct {
}

func (o *RegisterDeviceNotFound) Error() string {
	return fmt.Sprintf("[POST /device/register][%d] registerDeviceNotFound ", 404)
}

func (o *RegisterDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterDeviceInternalServerError creates a RegisterDeviceInternalServerError with default headers values
func NewRegisterDeviceInternalServerError() *RegisterDeviceInternalServerError {
	return &RegisterDeviceInternalServerError{}
}

/*RegisterDeviceInternalServerError handles this case with default header values.

Error
*/
type RegisterDeviceInternalServerError struct {
}

func (o *RegisterDeviceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /device/register][%d] registerDeviceInternalServerError ", 500)
}

func (o *RegisterDeviceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
